<div id="search-container" class="relative">
	<input list="suggestions" type="text" id="search-input" placeholder="Type to search..." />
	<datalist id="suggestions"></datalist>
</div>
<script>
	const searchInput = document.getElementById("search-input");
	const datalist = document.getElementById("suggestions");

	const debounce = (func, delay) => {
		let timeoutId;
		return function (...args) {
			clearTimeout(timeoutId);
			timeoutId = setTimeout(() => {
				func.apply(this, args);
			}, delay);
		};
	};

	const fetchAutoCompleteList = async (query) => {
		const response = await fetch(`https://api.radar.io/v1/search/autocomplete?query=${query}&layers=locality&limit=5`, {
			method: "GET",
			headers: {
				Authorization: import.meta.env.PUBLIC_RADAR_API_KEY,
			},
		});

		if (response.ok) {
			const data = await response.json();
			console.log(data);
			datalist.innerHTML = "";
			data.addresses.forEach((item) => {
				const option = document.createElement("option");
				option.label = item.formattedAddress;
				option.value = item.addressLabel;
				datalist.appendChild(option);
			});
			// do something with data
			// 入力値が候補の中にあるかをチェック
			const isMatched = data.addresses.some((item) => item.addressLabel === query);
			if (isMatched) {
				const event = new CustomEvent("locationSelected", {
					detail: { location: query },
					bubbles: true,
				});
				searchInput.dispatchEvent(event);
			}
		} else {
			// Handle the error
			console.error("Fetch error:", response.status, response.statusText);
			alert("Failed to fetch radar data");
		}
	};

	const handleSearch = async (event) => {
		const query = event.target.value;
		await fetchAutoCompleteList(query);
		// You can call your API here instead
	};

	// Setup debounce
	const debouncedSearch = debounce(handleSearch, 500); // 500ms delay
	searchInput.addEventListener("input", debouncedSearch);

	document.addEventListener("DOMContentLoaded", async function () {
		console.log(import.meta.env.PUBLIC_RADAR_API_KEY);
		await fetchAutoCompleteList("Tokyo");
	});
</script>
