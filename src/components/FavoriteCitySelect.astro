---
const favouriteCities = ["Vancouver", "Toronto", "Calgary"];
const defaultLabel = "Favourite Cities";
---

<div class="relative inline-block text-left">
	<!-- Dropdown Button -->
	<button
		id="menu-button"
		type="button"
		class="inline-flex items-center justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none"
	>
		<span>{defaultLabel}</span>
		<svg
			class="-mr-1 ml-2 h-5 w-5"
			xmlns="http://www.w3.org/2000/svg"
			viewBox="0 0 20 20"
			fill="currentColor"
			aria-hidden="true"
		>
			<path
				fill-rule="evenodd"
				d="M5.23 7.21a.75.75 0 011.06.02L10 11.17l3.71-3.94a.75.75 0 011.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
				clip-rule="evenodd"></path>
		</svg>
	</button>

	<!-- Dropdown Menu -->
	<div
		id="dropdown-menu"
		class="ring-opacity-5 absolute top-full left-0 z-50 mt-2 hidden w-full origin-top-left rounded-md bg-transparent shadow ring-1 ring-transparent focus:outline-none md:w-48"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="menu-button"
		tabindex="-1"
	>
		<div class="py-1" role="none">
			{
				favouriteCities.map((city) => (
					<a
						href="#"
						class="city-link block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
						role="menuitem"
						tabindex="-1"
					>
						{city}
					</a>
				))
			}
		</div>
	</div>
</div>

<!-- Client-side script for toggling the dropdown, updating the label,
     and saving the selected city to local storage -->
<script client:load>
	// Grab DOM elements
	const menuButton = document.getElementById("menu-button");
	const dropdownMenu = document.getElementById("dropdown-menu");
	const buttonLabel = menuButton.querySelector("span");

	// Toggle the dropdown visibility
	function toggleMenu() {
		dropdownMenu.classList.toggle("hidden");
	}

	// When the button is clicked, open/close the dropdown
	menuButton.addEventListener("click", (event) => {
		event.stopPropagation();
		toggleMenu();
	});

	// Add event listener for each city in the dropdown
	const cityLinks = dropdownMenu.querySelectorAll(".city-link");
	cityLinks.forEach((link) => {
		link.addEventListener("click", (event) => {
			event.preventDefault();
			const selectedCity = link.textContent.trim();

			// Update the button label
			buttonLabel.textContent = selectedCity;

			// Save the selected city to local storage
			localStorage.setItem("selectedCity", selectedCity);

			// Close the dropdown
			dropdownMenu.classList.add("hidden");
		});
	});
</script>
